INCLUDE_DIRECTORIES( "${CMAKE_CURRENT_SOURCE_DIR}" "${CMAKE_CURRENT_BINARY_DIR}" "${CMAKE_INCLUDE_PATH}" )

IF( NOT PLUGINNAME )
  SET( ${TARGETLIB}_HEADERS
    "${${TARGETLIB}_HEADERS}"
    "${CMAKE_CURRENT_BINARY_DIR}/${PROJECTNAME_UC}_config.h"
  )
ENDIF( NOT PLUGINNAME )

IF( DISABLE_SHARED )
  ADD_LIBRARY( ${TARGETLIB} STATIC ${${TARGETLIB}_SOURCES} )
ELSE( DISABLE_SHARED )
  ADD_LIBRARY( ${TARGETLIB} SHARED ${${TARGETLIB}_SOURCES} )
ENDIF( DISABLE_SHARED )

TARGET_LINK_LIBRARIES( ${TARGETLIB} ${LIB_LINKER} )

SET_TARGET_PROPERTIES(
  ${TARGETLIB} PROPERTIES
  SOVERSION "${SONAME_MAJOR}"
  OUTPUT_NAME "${TARGETLIB}"
  PUBLIC_HEADER "${${TARGETLIB}_HEADERS}"
)

INSTALL(
  TARGETS ${TARGETLIB}
  EXPORT ${PROJECTNAME_UC}LibraryDepends
  LIBRARY DESTINATION "${INSTALL_LIB_DIR_PREFIX}"
  ARCHIVE DESTINATION "${INSTALL_LIB_DIR_PREFIX}"
  PUBLIC_HEADER DESTINATION "${INSTALL_INCLUDE_DIR_PREFIX}"
  COMPONENT dev
)

IF( ENABLE_STATIC AND NOT DISABLE_SHARED )

  ADD_LIBRARY( ${TARGETLIB}_static STATIC ${${TARGETLIB}_SOURCES} )
  TARGET_LINK_LIBRARIES( ${TARGETLIB}_static ${LIB_LINKER} )

  SET_TARGET_PROPERTIES(
    ${TARGETLIB}_static PROPERTIES
    SOVERSION "${SONAME_MAJOR}"
    OUTPUT_NAME "${TARGETLIB}"
    PUBLIC_HEADER "${${TARGETLIB}_HEADERS}"
 )

  INSTALL(
    TARGETS ${TARGETLIB}_static
    EXPORT ${PROJECTNAME_UC}LibraryDepends
    LIBRARY DESTINATION "${INSTALL_LIB_DIR_PREFIX}"
    ARCHIVE DESTINATION "${INSTALL_LIB_DIR_PREFIX}"
    PUBLIC_HEADER DESTINATION "${INSTALL_INCLUDE_DIR_PREFIX}"
      COMPONENT dev
   )

ENDIF( ENABLE_STATIC AND NOT DISABLE_SHARED )

IF( INSTALL_DOCS AND DOXYGEN_FOUND )
  ADD_DEPENDENCIES( ${TARGETLIB} docs )
ENDIF( INSTALL_DOCS AND DOXYGEN_FOUND )
